// Generated by CoffeeScript 1.6.2
(function() {
  var $;

  $ = jQuery;

  $.offCanvasMenu = function(options) {
    var actions, body, cssSupport, head, innerWrapper, menu, menuLeft, outerWrapper, settings, transformPosition, transformPrefix, transitionCSS, trigger;

    settings = {
      direction: "left",
      menu: "#menu",
      trigger: "#menu-trigger",
      duration: 250
    };
    settings = $.extend(settings, options);
    cssSupport = (typeof Modernizr !== "undefined" && Modernizr !== null) && Modernizr.csstransforms && Modernizr.csstransitions;
    if (cssSupport) {
      transformPrefix = Modernizr.prefixed('transform').replace(/([A-Z])/g, function(str, m1) {
        return '-' + m1.toLowerCase();
      }).replace(/^ms-/, '-ms-');
    }
    head = $(document.head);
    body = $("body");
    trigger = $(settings.trigger);
    menu = $(settings.menu);
    transformPosition = settings.direction === "left" ? "70%" : "-70%";
    menuLeft = settings.direction === "left" ? "-70%" : "100%";
    transitionCSS = "<style>    body.off-canvas-menu .outer-wrapper {      left: 0;      overflow-x: hidden;      position: absolute;      top: 0;    }    body.off-canvas-menu .inner-wrapper {      position: relative;    }    body.off-canvas-menu " + settings.menu + " {      left: " + menuLeft + ";      margin: 0;      position: absolute;      top: 0;      width: 70%;    }  </style>";
    head.append(transitionCSS);
    body.children().wrapAll("<div class=\"outer-wrapper\" />");
    outerWrapper = $(".outer-wrapper");
    outerWrapper.children().wrapAll("<div class=\"inner-wrapper\" />");
    innerWrapper = $(".inner-wrapper");
    actions = {
      on: function() {
        body.addClass("off-canvas-menu");
        return trigger.on("touchstart mousedown", function(e) {
          e.preventDefault();
          actions.pauseClicks();
          return actions.toggle();
        });
      },
      off: function() {
        body.removeClass("off-canvas-menu");
        actions.hide();
        return trigger.off("touchstart mousedown");
      },
      toggle: function() {
        if (body.hasClass("menu-open") === true) {
          return actions.hide();
        } else {
          return actions.show();
        }
      },
      show: function() {
        actions.setHeights();
        actions.animate(transformPosition);
        $(window).on("resize", actions.setHeights);
        return body.addClass("menu-open");
      },
      hide: function() {
        actions.animate(0);
        $(window).off("resize");
        return body.removeClass("menu-open");
      },
      animate: function(position) {
        if (cssSupport) {
          innerWrapper.css({
            transition: transformPrefix + " " + settings.duration + "ms ease",
            transform: "translateX(" + position + ")"
          });
          if (!position) {
            return setTimeout(actions.clearHeights, settings.duration);
          }
        } else {
          return innerWrapper.animate({
            left: position
          }, settings.duration, !position ? actions.clearHeights : null);
        }
      },
      setHeights: function() {
        var height;

        actions.clearHeights();
        height = Math.max($(window).height(), $(document).height());
        outerWrapper.add(innerWrapper).css("height", height);
        if (height > menu.height()) {
          return menu.css("height", height);
        }
      },
      clearHeights: function() {
        return outerWrapper.add(innerWrapper).add(menu).css("height", "");
      },
      pauseClicks: function() {
        body.on("click", function(e) {
          e.preventDefault();
          return e.stopPropagation();
        });
        return setTimeout((function() {
          return body.off("click");
        }), settings.duration * 2);
      }
    };
    return {
      on: actions.on,
      off: actions.off,
      toggle: actions.toggle,
      show: actions.show,
      hide: actions.hide
    };
  };

}).call(this);
